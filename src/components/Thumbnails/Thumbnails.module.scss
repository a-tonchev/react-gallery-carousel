@use '../../common/common' as common;

.thumbnailsWrapper {
  flex: 0 0 common.$scale; // Use `common.` prefix to access `$scale`
  margin: common.$margin 0 0; // Use `common.` prefix to access `$margin`
  padding: 0;
  overflow-y: hidden;
  overflow-x: scroll;
  cursor: pointer;
  scrollbar-width: none;

  /* Prevent the default behaviour of "scroll chaining" where parent element
     gets scrolled when the child element is over scrolled,
     in order to prevent going to the previous or the next page. */
  overflow-scrolling: auto;
  -webkit-overflow-scrolling: touch;
  -ms-scroll-chaining: none;
  overscroll-behavior-x: contain;
  -ms-overflow-style: none;
}

:global(.isGrabbing).thumbnailsWrapper {
  cursor: pointer;
}

.thumbnailsWrapper::-webkit-scrollbar {
  display: none;
}

.thumbnails {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: flex-start;
}

.thumbnails::after {
  content: '\00a0';
}

.thumbnails.RTL {
  flex-direction: row-reverse;
  /* Thumbnails would be frozen (cannot be scrolled) with justify-content: flex-start; */
  justify-content: flex-end;
}
